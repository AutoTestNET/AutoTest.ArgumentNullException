<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <WorkingDir Condition="'$(WorkingDir)'==''">$([System.IO.Path]::GetFullPath('.'))</WorkingDir>
    <OutputPath Condition="'$(OutputPath)'==''">$(WorkingDir)\TestResults</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <XUnitRunnerAssemblyPathGroup Condition="'$(XUnitRunnerAssemblyPath)'==''"
                                  Include="$(WorkingDir)\packages\xunit.runner.msbuild*\**\xunit.runner.msbuild.dll" />
  </ItemGroup>

  <PropertyGroup>
    <XUnitRunnerAssemblyPath Condition="'$(XUnitRunnerAssemblyPath)'==''">@(XUnitRunnerAssemblyPathGroup)</XUnitRunnerAssemblyPath>
  </PropertyGroup>

  <!--
  Target to test whether the necessary properties have been predefined for generating the version file(s).
  -->
  <Target Name="TestExecuteXUnitTestsProperties">

    <!-- Do the error checking to ensure the appropriate items are defined.-->
    <Error Condition="'$(WorkingDir)'==''" Text="WorkingDir is not defined."/>
    <Error Condition="'$(OutputPath)'==''" Text="OutputPath is not defined."/>
    <Error Condition="'$(XUnitRunnerAssemblyPath)'==''" Text="XUnitRunnerAssemblyPath is not defined."/>
    <Error Condition="!Exists('$(XUnitRunnerAssemblyPath)')" Text="'$(XUnitRunnerAssemblyPath)' does not exist."/>

    <Message Text="ExecuteXUnitTests.targets Properties:-" />
    <Message Text="WorkingDir: '$(WorkingDir)'" />
    <Message Text="OutputPath: '$(OutputPath)'" />
    <Message Text="XUnitRunnerAssemblyPath: '$(XUnitRunnerAssemblyPath)'" />
  </Target>

  <!--
  Gets the list of assemblies to be tested.
  -->
  <Target Name="GetXUnitTestAssemblies">
    <CreateItem Include="$(WorkingDir)\**\bin\**\*Tests.dll">
      <Output TaskParameter="Include" ItemName="TestAssemblies"/>
    </CreateItem>
    <Message Text="Found test assemblies:-" Importance="high" />
    <Message Text="%(TestAssemblies.FullPath)" Importance="high" />
  </Target>

  <UsingTask AssemblyFile="$(XUnitRunnerAssemblyPath)"
             TaskName="Xunit.Runner.MSBuild.xunit"/>
  
  <!--
  Executes the unit tests with xUnit.
  -->
  <Target Name="CoreExecuteXUnitTests"
          Inputs="%(TestAssemblies.FullPath)"
          Outputs="$(OutputPath)\%(TestAssemblies.Filename).xml"
          DependsOnTargets="GetXUnitTestAssemblies"
          Condition="$(ExcludeXUnitTests) != 'True'">
    
    <MakeDir Directories="$(OutputPath)" />

    <xunit Assembly="%(TestAssemblies.FullPath)" Xml="$(OutputPath)\%(TestAssemblies.Filename).xml" />
    
  </Target>

  <!--
  Property group to define the dependencies of ExecuteUnitTests target
  -->
  <PropertyGroup>
    <ExecuteUnitTestsDependsOn>
      $(ExecuteUnitTestsDependsOn);
      TestExecuteXUnitTestsProperties;
      CoreExecuteXUnitTests;
    </ExecuteUnitTestsDependsOn>
  </PropertyGroup>
  <Target Name="ExecuteUnitTests" DependsOnTargets="$(ExecuteUnitTestsDependsOn)" />

  <!--
  Target to test whether the necessary properties have been predefined for executing the unit tests.
  -->
  <Target Name="TestCleanXUnitTestResultFilesProperties">

    <!-- Do the error checking to ensure the appropriate items are defined.-->
    <Error Condition="'$(OutputPath)'==''" Text="OutputPath is not defined."/>

    <Message Text="ExecuteUnitTests.targets Properties:-" />
    <Message Text="OutputPath: '$(OutputPath)'" />
  </Target>

  <!-- Cleans all the generated files.  -->
  <Target Name="CoreCleanXUnitTestResultFiles" Condition="Exists($(OutputPath))">
    <Message Text="Deleting test result files '$(OutputPath)\*Tests.xml'." Importance="high" />
    <Delete Files="$(OutputPath)\*Tests.xml" />
    <RemoveDir Directories="$(OutputPath)" />
  </Target>

  <!--
  Property group to define the dependencies of CleanTestResultFiles target
  -->
  <PropertyGroup>
    <CleanTestResultFilesDependsOn>
      $(CleanTestResultFilesDependsOn);
      TestCleanXUnitTestResultFilesProperties;
      CoreCleanXUnitTestResultFiles;
    </CleanTestResultFilesDependsOn>
  </PropertyGroup>
  <Target Name="CleanTestResultFiles" DependsOnTargets="$(CleanTestResultFilesDependsOn)" />

</Project>
